#!/usr/bin/env python3
import yaml
from time import sleep
import requests
import os

class Confd():
    def __init__(self):

        self.script_dir = os.path.dirname(os.path.realpath(__file__))
        with open(f"{self.script_dir}/configd.yml") as f:
            self.conf = yaml.safe_load(f)
        self.etcd_url = 'http://127.0.0.1:2379'
        #self.leader_ip = None
        #self.get_watching_key()

    def get_watching_key(self):
        url = f"{self.etcd_url}/v2/keys/{self.conf['service']['config']['watching_key']}"
        res = requests.get(url)
        try:
            if res.status_code == 200:
                answer = res.json()
                if 'node' in answer.keys():
                    if 'value' in answer['node']:
                        self.leader_ip = answer['node']['value']
        except Exception as e:
            print (e)

    def update_watching_key(self, value):
        res = requests.put(f"{self.etcd_url}/keys/{self.conf['service']['config']['watching_key']}", {"value": value} ,timeout=10)
        if res.status_code == '200':
            print (res.json())

    def watch(self):
        url = f"{self.etcd_url}/v2/keys/{self.conf['service']['config']['watching_key']}"
        res = requests.get(url)
        try:
            if res.status_code == 200:
                answer = res.json()
                if 'node' in answer.keys():
                    if 'value' in answer['node']:
                        is_reload = answer['node']['value']
                        if int(is_reload) == 1:
                            self.copy_config()
                            if os.path.isfile(self.conf['service']['config']['desination']):
                                self.run_commands()
                            self.update_watching_key(0)

        except Exception as e:
            print (e)

    def copy_config(self):
        cmd = f"/usr/bin/cp {self.script_dir}/{self.conf['service']['config']['source']} {self.conf['service']['config']['desination']}"
        return os.system(cmd)

    def run_commands(self):
        for cmd in self.conf['service']['config']['commands']:
            os.system(cmd)

c = Confd()
print(f"I got this swarm_ip from config {c.conf['service']['config']['this_host_swarm_ip']} .Are you shure?")
while True:
    c.watch()
    sleep(0.5)





